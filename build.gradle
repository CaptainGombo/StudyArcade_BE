plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.12'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'

    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'trillion9'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'com.google.code.findbugs:jsr305:3.0.2'
    testImplementation 'org.springframework.security:spring-security-test'

    // Jwt
    compileOnly group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'
    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    // S3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    // Mysql
    implementation 'mysql:mysql-connector-java:8.0.33'
    runtimeOnly 'mysql:mysql-connector-java'
    // Swagger
    implementation 'org.springdoc:springdoc-openapi-ui:1.6.9'
    // Sentry
    implementation 'io.sentry:sentry-spring-boot-starter:6.23.0'
    implementation 'io.sentry:sentry-logback:6.23.0'
    // Email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    // OpenVidu
    implementation 'io.openvidu:openvidu-java-client:2.25.0'
    // Websocket
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    // Stomp
    implementation 'org.webjars:stomp-websocket:2.3.4'
    // SockJS
    implementation 'org.webjars:sockjs-client:1.5.1'
    // Gson
    implementation 'com.google.code.gson:gson:2.9.0'
    // QueryDSL
    implementation "com.querydsl:querydsl-jpa:5.0.0"
    implementation "com.querydsl:querydsl-apt:5.0.0"
    implementation "com.querydsl:querydsl-core:5.0.0"
    implementation "com.querydsl:querydsl-collections"

    annotationProcessor "com.querydsl:querydsl-apt:5.0.0"
    annotationProcessor "javax.annotation:javax.annotation-api"
    annotationProcessor "javax.persistence:javax.persistence-api"


}

// Qtype 생성 경로
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

tasks.named('test') {
    useJUnitPlatform()
}
